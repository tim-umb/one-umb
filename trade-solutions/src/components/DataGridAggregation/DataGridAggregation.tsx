/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button, SvgIcon } from '@mui/material';
import { styled } from '@mui/material/styles';
import IconViewColumn from 'src/components/IconViewColumn/IconViewColumn';
import ChevronLeftFilled from 'src/components/ChevronLeftFilled/ChevronLeftFilled';
import IconTableRows from 'src/components/IconTableRows/IconTableRows';
import IconSaveAlt from 'src/components/IconSaveAlt/IconSaveAlt';
import { DataGridAggregationProps } from 'src/types';

const DataGridAggregation1: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `4px 16px`,
  boxSizing: `border-box`,
  height: 'auto',
});

const IconViewColumn1: any = styled(IconViewColumn)(({ theme }: any) => ({
  height: `24px`,
  width: `24px`,
}));

const Button1: any = styled(Button)(({ theme }: any) => ({
  margin: `0px`,
  color: `rgba(0, 60, 110, 1)`,
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `500`,
  fontSize: `13px`,
  letterSpacing: `0.46000000834465027px`,
  textDecoration: `none`,
  lineHeight: `22px`,
  textTransform: `uppercase`,
}));

const IconTableRows1: any = styled(IconTableRows)(({ theme }: any) => ({
  height: `24px`,
  width: `24px`,
}));

const Button4: any = styled(Button)(({ theme }: any) => ({
  margin: `0px 0px 0px 8px`,
  color: `rgba(0, 60, 110, 1)`,
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `500`,
  fontSize: `13px`,
  letterSpacing: `0.46000000834465027px`,
  textDecoration: `none`,
  lineHeight: `22px`,
  textTransform: `uppercase`,
}));

const IconSaveAlt1: any = styled(IconSaveAlt)(({ theme }: any) => ({
  height: `24px`,
  width: `24px`,
}));

const Button5: any = styled(Button)(({ theme }: any) => ({
  margin: `0px 0px 0px 8px`,
  color: `rgba(0, 60, 110, 1)`,
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `500`,
  fontSize: `13px`,
  letterSpacing: `0.46000000834465027px`,
  textDecoration: `none`,
  lineHeight: `22px`,
  textTransform: `uppercase`,
}));

function DataGridAggregation(props: DataGridAggregationProps): JSX.Element {
  return (
    <DataGridAggregation1 className={props.className}>
      <Button1
        size={'large'}
        color={'primary'}
        disabled={false}
        variant={'text'}
        startIcon={<IconViewColumn1 />}
      >
        {'columns'}
      </Button1>
      <Button4
        size={'large'}
        color={'primary'}
        disabled={false}
        variant={'text'}
        startIcon={<IconTableRows1 />}
      >
        {'density'}
      </Button4>
      <Button5
        size={'large'}
        color={'primary'}
        disabled={false}
        variant={'text'}
        startIcon={<IconSaveAlt1 />}
      >
        {'export'}
      </Button5>
    </DataGridAggregation1>
  );
}

export default DataGridAggregation;
